{"pageProps":{"data":{"title":"How to use this code","description":"The technologies this site was built on including NextJs, React, Brevifolia","author":"Robert Smith","date":"2020-08-18T07:00:00.000Z","blog_image":null,"next_button_path":"/thissite/styling"},"content":"\n## Determine your site structure\n\nFirst you need to determine how your site will be layed out with respect to the URL and the categorization of data.\n\nFor example, the following site structure was used for this site: \n```js\n/thissite\n/javascript\n/react\n```\n\nIf the user enters the URLs:\n```html\n/thissite/why\n/thissite/how\n/thissite/what\n```\nThen they're routed to the respect content:\n```js\n/thissite/why.md\n/thissite/how.md\n/thissite/what.md\n```\n\n\n## Start\n\nTo get the application up and running,\n\n```bash\n  git clone XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx\n```\n\n## Constants\nThe constants.js file (under the constants directory), defines the high-level site information including site title, description. Especially of importance is the \"markdownDir\". This is the directory where the post are kept. The default location is \"/posts\".\n\n![Constants](constants.webp)\n\n\n## Index Page\nThe index page will pull the content specified as the \"indexPage\" in the constants file.\n\n![Index](indexPage.webp)\n\n\n## Side Menu\nThe side menu defines an array of JSON objects that contain the side menu. No other coding is needed for the side menu. The JSON contains the menu titles and the location of the content, which should include the directory and the content name (without the .md extension). The directory locations are relative locations (e.g don't include \"https://www.411tech.info/thissite/how\" - but instead put in the path \"thissite/how\").\n\n>For a guide to creating markdown files, go to the [Markdown Guide](/addtl/markdown-p1)\n\n\n![Side Menu](sideMenu.webp)\n\nCreate in the \"posts\" directory your directories and your content. The content should be in markdown format and end with \".md\"\n\n## Post\nThe posts are defined in the directory specified in the constants directory, which the default is the \"posts\" directory. The side menu configuration should point to these articles, including the directory (e.g. \"/thissite/why\"). The posts can include markdown and/or HTML and the file name should end in \".md\"\n\nThe content should start with a header to provide information the blog needs.\n\n```json\n    ---\n    title: 'Why is this needed?'\n    author: Robert Smith\n    date: '2020-08-18T07:00:00.000Z'\n    blog_image: \n    ---\n```\n\nThe header information is passed to the Layout component in the data component. The header information in the markdown files can be changed, such as adding new meta data, as needed.\n\n![Layout Header](Layout-headerData.webp)\n\n\n\n![Posts](post-category-content.webp)\n\n## Images\nThe images should follow the same directory structure as defined earliers for the posts. The images must be in the \"public\" directory. This application will look for the image to be in the same subdirectory structure as the content was.\n\n![Images](pics-categories-images.webp)\n\n\n In the markdown, only the image name needs to be specified. \n \n ![Image Example](image-example.webp)\n\n ## Note: Converting images to WebP\n To improve the performance of loading images, it's recommended to convert the images to the WebP format. A utility has been provided with this application to convert all of the images in the public directory that end with .jpg or .png to webp. To convert the images, from a terminal window cd to your project directory and run the following command.\n ```bash\nnpm run imageConvert\n```\n\nBe sure to update your content to reflect the images end with .webp.\n\n\n\n[Additional information on WebP](https://web.dev/serve-images-webp/)\n\n[Which browsers support WebP](https://caniuse.com/#search=webp)\n\n\n## Gotchas\n\nThe application will render HTML as well as markdown. If you have an issue with the page, links, etc., check for HTML errors such as missing tags in your content. HTML tag issues with your content will cause your page to render incorrectly from the point of the HTML error.\n","slug":["thissite","how"],"blogDir":"thissite"},"__N_SSG":true}